// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider             = "mysql"
  url                  = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}

model Venue {
  id            Int       @id @default(autoincrement())
  apiFootballId Int
  name          String
  address       String?
  city          String?
  capacity      Int
  surface       String?
  image         String
  Team          Team[]
  Fixture       Fixture[]
}

model Team {
  id            Int        @id @default(autoincrement())
  apiFootballId Int
  name          String
  code          String
  country       String
  founded       String
  national      Boolean
  logo          String
  venue         Venue?     @relation(fields: [venueId], references: [id])
  venueId       Int?
  HomeFixture   Fixture[]  @relation("Home")
  AwayFixture   Fixture[]  @relation("Away")
  Standing      Standing[]
}

model Country {
  id     Int      @id @default(autoincrement())
  name   String
  code   String?
  flag   String?
  League League[]
}

model League {
  id            Int       @id @default(autoincrement())
  apiFootballId Int
  name          String
  country       Country   @relation(fields: [countryId], references: [id])
  countryId     Int
  type          String
  logo          String
  Fixture       Fixture[]
}

model Fixture {
  id                 Int     @id @default(autoincrement())
  apiFootballId      Int
  referee            String?
  timezone           String
  timestamp          Int
  firstPeriod        Int?
  secondPeriod       Int?
  venue              Venue?  @relation(fields: [venueId], references: [id])
  venueId            Int?
  statusLong         String
  statusShort        String
  elapsedTime        Int?
  league             League  @relation(fields: [leagueId], references: [id])
  leagueId           Int
  season             Int
  homeTeam           Team    @relation("Home", fields: [homeTeamId], references: [id])
  homeTeamId         Int
  awayTeam           Team    @relation("Away", fields: [awayTeamId], references: [id])
  awayTeamId         Int
  goalsHome          Int?
  goalsAway          Int?
  scoreHalfTimeHome  Int?
  scoreHalfTimeAway  Int?
  scoreFullTimeHome  Int?
  scoreFullTimeAway  Int?
  scoreExtraTimeHome Int?
  scoreExtraTimeAway Int?
  scorePenaltyHome   Int?
  scorePenaltyAway   Int?
}

model Standing {
  id               Int      @id @default(autoincrement())
  rank             Int
  team             Team     @relation(fields: [teamId], references: [id])
  teamId           Int
  points           Int
  goalsDiff        Int
  playedHome       Int
  winHome          Int
  drawHome         Int
  loseHome         Int
  goalsForHome     Int
  goalsAgainstHome Int
  playedAway       Int
  winAway          Int
  drawAway         Int
  loseAway         Int
  goalsForAway     Int
  goalsAgainstAway Int
  update           DateTime
  season           Int
}
